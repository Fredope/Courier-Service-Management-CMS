




<!DOCTYPE html>
<html class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>bootstrapvalidator/dist/js/bootstrapValidator.min.js at master Â· nghuuphuoc/bootstrapvalidator</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="nghuuphuoc/bootstrapvalidator" name="twitter:title" /><meta content="bootstrapvalidator - The best jQuery plugin to validate form fields. Designed to use with Bootstrap 3" name="twitter:description" /><meta content="https://avatars3.githubusercontent.com/u/4226036?s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars3.githubusercontent.com/u/4226036?s=400" property="og:image" /><meta content="nghuuphuoc/bootstrapvalidator" property="og:title" /><meta content="https://github.com/nghuuphuoc/bootstrapvalidator" property="og:url" /><meta content="bootstrapvalidator - The best jQuery plugin to validate form fields. Designed to use with Bootstrap 3" property="og:description" />

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets" />

    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="B4FFF853:287E:A8CBF64:53995DB3" name="octolytics-dimension-request_id" /><meta content="7748640" name="octolytics-actor-id" /><meta content="thisisclement" name="octolytics-actor-login" /><meta content="46a70a5d64ba38172783e980f1a7f62d6a236ade1f3f04ffc93c515f83bf3abb" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico" />


    <meta content="authenticity_token" name="csrf-param" />
<meta content="yRXXo8OTcbpRirHx4/z4Qlp8mV+p6xHSGxaw5ncbSvZ1heqgN01mwlzfuaPzlB34QRPOVnHE4Wiy/p/PWtxV9g==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-e3bc44d99a5c83dfa1f8fd5618b2bf5595dd9023.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-a1fd2161b2d8ea3aef1c3d15c79772ff80eb5523.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="3f0b593ffa8845f1b631ab8c6a8df539">

      
  <meta name="description" content="bootstrapvalidator - The best jQuery plugin to validate form fields. Designed to use with Bootstrap 3" />

  <meta content="4226036" name="octolytics-dimension-user_id" /><meta content="nghuuphuoc" name="octolytics-dimension-user_login" /><meta content="13260326" name="octolytics-dimension-repository_id" /><meta content="nghuuphuoc/bootstrapvalidator" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="13260326" name="octolytics-dimension-repository_network_root_id" /><meta content="nghuuphuoc/bootstrapvalidator" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/nghuuphuoc/bootstrapvalidator/commits/master.atom" rel="alternate" title="Recent Commits to bootstrapvalidator:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" aria-label="You have no unread notifications" class="notification-indicator tooltipped tooltipped-s" data-hotkey="g n">
        <span class="mail-status all-read"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="s, /" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="thisisclement"
      data-repo="nghuuphuoc/bootstrapvalidator"
      data-branch="master"
      data-sha="5ae6bfd0382357bfbcfee3678b727f660c720da9"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="nghuuphuoc/bootstrapvalidator" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/thisisclement" class="name">
        <img alt="thisisclement" class=" js-avatar" data-user="7748640" height="20" src="https://avatars3.githubusercontent.com/u/7748640?s=140" width="20" /> thisisclement
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="new-menu-content js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped tooltipped-s"
        aria-label="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <form class="logout-form" action="/logout" method="post">
        <button class="sign-out-button tooltipped tooltipped-s" aria-label="Sign out">
          <span class="octicon octicon-sign-out"></span>
        </button>
      </form>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="nghuuphuoc/bootstrapvalidator">This repository</span>
    </li>
      <li>
        <a href="/nghuuphuoc/bootstrapvalidator/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="s38IoGmGs6518RJAqas5UTBPfWuGdDw4bNYqpKglMKKfZgbePhCIW5+RdXwFHvNKbtd7fsWsvGehc/3A28nnbg==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="13260326" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/nghuuphuoc/bootstrapvalidator/watchers">
        38
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-x js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/nghuuphuoc/bootstrapvalidator/unstar" class="js-toggler-form starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="a6P4FC+DJvIh09cyQV/h9/sPKANx43YfuFs+JRSTu/2x6eQm+SsomGt9fv4uCrar8iCZwXjfvCkryampfcewAQ==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar nghuuphuoc/bootstrapvalidator">
        <span class="octicon octicon-star"></span><span class="text">Unstar</span>
      </button>
        <a class="social-count js-social-count" href="/nghuuphuoc/bootstrapvalidator/stargazers">
          406
        </a>
</form>
    <form accept-charset="UTF-8" action="/nghuuphuoc/bootstrapvalidator/star" class="js-toggler-form unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="MSCVSqGBblBAWyqjnQzLzDZtXRNfD2/glWoWt6ShbhIe5uX0tTc99JtJ+fiYKE1Q8lSpAD4ZS8GjRC+uTZ6IXA==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star nghuuphuoc/bootstrapvalidator">
        <span class="octicon octicon-star"></span><span class="text">Star</span>
      </button>
        <a class="social-count js-social-count" href="/nghuuphuoc/bootstrapvalidator/stargazers">
          406
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/nghuuphuoc/bootstrapvalidator/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of nghuuphuoc/bootstrapvalidator to your account" aria-label="Fork your own copy of nghuuphuoc/bootstrapvalidator to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span><span class="text">Fork</span>
          </a>
          <a href="/nghuuphuoc/bootstrapvalidator/network" class="social-count">142</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/nghuuphuoc" class="url fn" itemprop="url" rel="author"><span itemprop="title">nghuuphuoc</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/nghuuphuoc/bootstrapvalidator" class="js-current-repository js-repo-home-link">bootstrapvalidator</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/nghuuphuoc/bootstrapvalidator" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /nghuuphuoc/bootstrapvalidator">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/nghuuphuoc/bootstrapvalidator/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues /nghuuphuoc/bootstrapvalidator/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>90</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/nghuuphuoc/bootstrapvalidator/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /nghuuphuoc/bootstrapvalidator/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>4</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/nghuuphuoc/bootstrapvalidator/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g w" data-selected-links="repo_wiki /nghuuphuoc/bootstrapvalidator/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/nghuuphuoc/bootstrapvalidator/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /nghuuphuoc/bootstrapvalidator/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/nghuuphuoc/bootstrapvalidator/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /nghuuphuoc/bootstrapvalidator/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/nghuuphuoc/bootstrapvalidator/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /nghuuphuoc/bootstrapvalidator/network">
          <span class="octicon octicon-repo-forked"></span> <span class="full-word">Network</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/nghuuphuoc/bootstrapvalidator.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/nghuuphuoc/bootstrapvalidator.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:nghuuphuoc/bootstrapvalidator.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:nghuuphuoc/bootstrapvalidator.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/nghuuphuoc/bootstrapvalidator" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/nghuuphuoc/bootstrapvalidator" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/nghuuphuoc/bootstrapvalidator" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save nghuuphuoc/bootstrapvalidator to your computer and use it in GitHub Desktop." aria-label="Save nghuuphuoc/bootstrapvalidator to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/nghuuphuoc/bootstrapvalidator/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download nghuuphuoc/bootstrapvalidator as a zip file"
                   title="Download nghuuphuoc/bootstrapvalidator as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<a href="/nghuuphuoc/bootstrapvalidator/blob/e45eb478e8f9e6d58f8f95887634436aeb00543a/dist/js/bootstrapValidator.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:8b4c94e186be630f20b46679b619cdb3 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/blob/gh-pages/dist/js/bootstrapValidator.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/blob/master/dist/js/bootstrapValidator.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/blob/v0.3/dist/js/bootstrapValidator.min.js"
                 data-name="v0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.3">v0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/blob/v0.4.0/dist/js/bootstrapValidator.min.js"
                 data-name="v0.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.4.0">v0.4.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/blob/v0.5.0/dist/js/bootstrapValidator.min.js"
                 data-name="v0.5.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.5.0">v0.5.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.4.5/dist/js/bootstrapValidator.min.js"
                 data-name="v0.4.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.4.5">v0.4.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.4.4/dist/js/bootstrapValidator.min.js"
                 data-name="v0.4.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.4.4">v0.4.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.4.3/dist/js/bootstrapValidator.min.js"
                 data-name="v0.4.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.4.3">v0.4.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.4.2/dist/js/bootstrapValidator.min.js"
                 data-name="v0.4.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.4.2">v0.4.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.4.1/dist/js/bootstrapValidator.min.js"
                 data-name="v0.4.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.4.1">v0.4.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.4.0/dist/js/bootstrapValidator.min.js"
                 data-name="v0.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.4.0">v0.4.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.3.3/dist/js/bootstrapValidator.min.js"
                 data-name="v0.3.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.3.3">v0.3.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.3.2/dist/js/bootstrapValidator.min.js"
                 data-name="v0.3.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.3.2">v0.3.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.3.1/dist/js/bootstrapValidator.min.js"
                 data-name="v0.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.3.1">v0.3.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.3.0/dist/js/bootstrapValidator.min.js"
                 data-name="v0.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.3.0">v0.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.2.2/dist/js/bootstrapValidator.min.js"
                 data-name="v0.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.2.2">v0.2.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.2.1/dist/js/bootstrapValidator.min.js"
                 data-name="v0.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.2.1">v0.2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.2.0/dist/js/bootstrapValidator.min.js"
                 data-name="v0.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.2.0">v0.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.1.1/dist/js/bootstrapValidator.min.js"
                 data-name="v0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.1.1">v0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/nghuuphuoc/bootstrapvalidator/tree/v0.1.0/dist/js/bootstrapValidator.min.js"
                 data-name="v0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.1.0">v0.1.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/nghuuphuoc/bootstrapvalidator/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="dist/js/bootstrapValidator.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nghuuphuoc/bootstrapvalidator" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">bootstrapvalidator</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nghuuphuoc/bootstrapvalidator/tree/master/dist" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">dist</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nghuuphuoc/bootstrapvalidator/tree/master/dist/js" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><strong class="final-path">bootstrapValidator.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
      <img alt="Phuoc Nguyen" class="main-avatar js-avatar" data-user="4226036" height="24" src="https://avatars0.githubusercontent.com/u/4226036?s=140" width="24" />
      <span class="author"><a href="/nghuuphuoc" rel="author">nghuuphuoc</a></span>
      <time datetime="2014-06-12T10:56:01+07:00" is="relative-time">June 12, 2014</time>
      <div class="commit-title">
          <a href="https://github.com/nghuuphuoc/bootstrapvalidator/issues/366" class="issue-link" title="Don't change the enable setting when the new one is the same">#366</a><a href="/nghuuphuoc/bootstrapvalidator/commit/e45eb478e8f9e6d58f8f95887634436aeb00543a" class="message" data-pjax="true" title="#366: Don't change the enable setting when the new one is the same">: Don't change the enable setting when the new one is the same</a>
      </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>3</strong>  contributors</a></p>
          <a class="avatar tooltipped tooltipped-s" aria-label="nghuuphuoc" href="/nghuuphuoc/bootstrapvalidator/commits/master/dist/js/bootstrapValidator.min.js?author=nghuuphuoc"><img alt="Phuoc Nguyen" class=" js-avatar" data-user="4226036" height="20" src="https://avatars0.githubusercontent.com/u/4226036?s=140" width="20" /></a>
    <a class="avatar tooltipped tooltipped-s" aria-label="khangvm53" href="/nghuuphuoc/bootstrapvalidator/commits/master/dist/js/bootstrapValidator.min.js?author=khangvm53"><img alt="khangvm53" class=" js-avatar" data-user="4370897" height="20" src="https://avatars2.githubusercontent.com/u/4370897?s=140" width="20" /></a>
    <a class="avatar tooltipped tooltipped-s" aria-label="aca02djr" href="/nghuuphuoc/bootstrapvalidator/commits/master/dist/js/bootstrapValidator.min.js?author=aca02djr"><img alt="aca02djr" class=" js-avatar" data-user="5881106" height="20" src="https://avatars1.githubusercontent.com/u/5881106?s=140" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Phuoc Nguyen" class=" js-avatar" data-user="4226036" height="24" src="https://avatars0.githubusercontent.com/u/4226036?s=140" width="24" />
            <a href="/nghuuphuoc">nghuuphuoc</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="khangvm53" class=" js-avatar" data-user="4370897" height="24" src="https://avatars2.githubusercontent.com/u/4370897?s=140" width="24" />
            <a href="/khangvm53">khangvm53</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="aca02djr" class=" js-avatar" data-user="5881106" height="24" src="https://avatars1.githubusercontent.com/u/5881106?s=140" width="24" />
            <a href="/aca02djr">aca02djr</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>13 lines (12 sloc)</span>
          <span class="meta-divider"></span>
        <span>62.634 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped tooltipped-w js-conduit-openfile-check"
               href="http://mac.github.com"
               data-url="github-mac://openRepo/https://github.com/nghuuphuoc/bootstrapvalidator?branch=master&amp;filepath=dist%2Fjs%2FbootstrapValidator.min.js"
               aria-label="Open this file in GitHub for Mac"
               data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped tooltipped-n js-update-url-with-hash"
                   aria-label="Clicking this button will automatically fork this project so you can edit the file"
                   href="/nghuuphuoc/bootstrapvalidator/edit/master/dist/js/bootstrapValidator.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/nghuuphuoc/bootstrapvalidator/raw/master/dist/js/bootstrapValidator.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/nghuuphuoc/bootstrapvalidator/blame/master/dist/js/bootstrapValidator.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/nghuuphuoc/bootstrapvalidator/commits/master/dist/js/bootstrapValidator.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

            <a class="minibutton danger empty-icon tooltipped tooltipped-s"
               href="/nghuuphuoc/bootstrapvalidator/delete/master/dist/js/bootstrapValidator.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">

          Delete
        </a>
      </div><!-- /.actions -->
    </div>
      
  <div class="blob-wrapper data type-javascript js-blob-data">
       <table class="file-code file-diff tab-size-8">
         <tr class="file-code-line">
           <td class="blob-line-nums">
             <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>

           </td>
           <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/**</span></div><div class='line' id='LC2'><span class="cm"> * BootstrapValidator (http://bootstrapvalidator.com)</span></div><div class='line' id='LC3'><span class="cm"> *</span></div><div class='line' id='LC4'><span class="cm"> * The best jQuery plugin to validate form fields. Designed to use with Bootstrap 3</span></div><div class='line' id='LC5'><span class="cm"> *</span></div><div class='line' id='LC6'><span class="cm"> * @version     v0.5.0-dev</span></div><div class='line' id='LC7'><span class="cm"> * @author      https://twitter.com/nghuuphuoc</span></div><div class='line' id='LC8'><span class="cm"> * @copyright   (c) 2013 - 2014 Nguyen Huu Phuoc</span></div><div class='line' id='LC9'><span class="cm"> * @license     MIT</span></div><div class='line' id='LC10'><span class="cm"> */</span></div><div class='line' id='LC11'><br/></div><div class='line' id='LC12'><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">b</span><span class="p">.</span><span class="nx">DEFAULT_OPTIONS</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="o">=</span><span class="nx">a</span><span class="p">([]),</span><span class="k">this</span><span class="p">.</span><span class="nx">$submitButton</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="o">=</span><span class="s2">&quot;NOT_VALIDATED&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALIDATING</span><span class="o">=</span><span class="s2">&quot;VALIDATING&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="o">=</span><span class="s2">&quot;INVALID&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="o">=</span><span class="s2">&quot;VALID&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">all</span><span class="o">||</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;!--[if gt IE &quot;</span><span class="o">+</span> <span class="o">++</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;]&gt;&lt;br&gt;&lt;![endif]--&gt;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">];);</span><span class="k">return</span> <span class="nx">a</span><span class="o">&gt;</span><span class="mi">4</span><span class="o">?</span><span class="nx">a</span><span class="o">:!</span><span class="nx">a</span><span class="p">}(),</span><span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_changeEvent</span><span class="o">=</span><span class="mi">9</span><span class="o">!==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="s2">&quot;oninput&quot;</span><span class="k">in</span> <span class="nx">f</span><span class="o">?</span><span class="s2">&quot;input&quot;</span><span class="o">:</span><span class="s2">&quot;keyup&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_submitIfValid</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">DEFAULT_OPTIONS</span><span class="o">=</span><span class="p">{</span><span class="nx">elementClass</span><span class="o">:</span><span class="s2">&quot;bv-form&quot;</span><span class="p">,</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;This value is not valid&quot;</span><span class="p">,</span><span class="nx">container</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">threshold</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">excluded</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;:disabled&quot;</span><span class="p">,</span><span class="s2">&quot;:hidden&quot;</span><span class="p">,</span><span class="s2">&quot;:not(:visible)&quot;</span><span class="p">],</span><span class="nx">feedbackIcons</span><span class="o">:</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">invalid</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">validating</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">submitButtons</span><span class="o">:</span><span class="s1">&#39;[type=&quot;submit&quot;]&#39;</span><span class="p">,</span><span class="nx">submitHandler</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">live</span><span class="o">:</span><span class="s2">&quot;enabled&quot;</span><span class="p">,</span><span class="nx">fields</span><span class="o">:</span><span class="p">{}},</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">constructor</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">_init</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">excluded</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-excluded&quot;</span><span class="p">),</span><span class="nx">trigger</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-trigger&quot;</span><span class="p">),</span><span class="nx">message</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-message&quot;</span><span class="p">),</span><span class="nx">container</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-container&quot;</span><span class="p">),</span><span class="nx">submitButtons</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-submitbuttons&quot;</span><span class="p">),</span><span class="nx">threshold</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-threshold&quot;</span><span class="p">),</span><span class="nx">live</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-live&quot;</span><span class="p">),</span><span class="nx">fields</span><span class="o">:</span><span class="p">{},</span><span class="nx">feedbackIcons</span><span class="o">:</span><span class="p">{</span><span class="nx">valid</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-feedbackicons-valid&quot;</span><span class="p">),</span><span class="nx">invalid</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-feedbackicons-invalid&quot;</span><span class="p">),</span><span class="nx">validating</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-feedbackicons-validating&quot;</span><span class="p">)}};</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;novalidate&quot;</span><span class="p">,</span><span class="s2">&quot;novalidate&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">elementClass</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;submit.bv&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">validate</span><span class="p">()}).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click.bv&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">submitButtons</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">$submitButton</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">_submitIfValid</span><span class="o">=!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;[name], [data-bv-field]&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">_isExcluded</span><span class="p">(</span><span class="nx">d</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_parseOptions</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">e</span><span class="p">]))}}),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_initField</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;init.form.bv&quot;</span><span class="p">),{</span><span class="nx">options</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">})},</span><span class="nx">_parseOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">enableByHtml5</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">enableByHtml5</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="s2">&quot;false&quot;</span><span class="o">!=</span><span class="nx">e</span><span class="o">||</span><span class="nx">i</span><span class="o">!==!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">||</span><span class="s2">&quot;true&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">)){</span><span class="nx">c</span><span class="p">.</span><span class="nx">html5Attributes</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">html5Attributes</span><span class="o">||</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">},</span><span class="nx">k</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="mi">1</span><span class="o">==</span><span class="nx">i</span><span class="o">?</span><span class="p">{}</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span> <span class="k">in</span> <span class="nx">c</span><span class="p">.</span><span class="nx">html5Attributes</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">html5Attributes</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;true&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="s2">&quot;false&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">k</span><span class="p">[</span><span class="nx">d</span><span class="p">][</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="p">{</span><span class="nx">feedbackIcons</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-feedbackicons&quot;</span><span class="p">),</span><span class="nx">trigger</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-trigger&quot;</span><span class="p">),</span><span class="nx">message</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-message&quot;</span><span class="p">),</span><span class="nx">container</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-container&quot;</span><span class="p">),</span><span class="nx">selector</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-selector&quot;</span><span class="p">),</span><span class="nx">threshold</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-threshold&quot;</span><span class="p">),</span><span class="nx">validators</span><span class="o">:</span><span class="nx">k</span><span class="p">},</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="nx">n</span><span class="o">||!</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">validators</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">_initField</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">switch</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;string&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">validators</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="k">void</span> <span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">validators</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">||</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">validators</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">enabled</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="mi">1</span><span class="o">==</span><span class="nx">f</span><span class="o">||</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;.form-group&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">container</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="s2">&quot;tooltip&quot;</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="s2">&quot;popover&quot;</span><span class="o">!=</span><span class="nx">l</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_getMessageContainer</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="s2">&quot;tooltip&quot;</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="s2">&quot;popover&quot;</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;has-error&quot;</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.help-block[data-bv-validator][data-bv-for=&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">k</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;i[data-bv-icon-for=&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;file&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;SELECT&quot;</span><span class="o">==</span><span class="nx">j</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">tagName</span><span class="o">?</span><span class="s2">&quot;change&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_changeEvent</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;.update.bv&quot;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot;.update.bv&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">_submitIfValid</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">updateStatus</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="p">)}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.messages&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">validators</span><span class="p">)</span><span class="nx">j</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="p">),</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">!=</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="o">||</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;&lt;small/&gt;&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;none&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;help-block&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-validator&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-for&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-result&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">validators</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">message</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">message</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">message</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">feedbackIcons</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="s2">&quot;false&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">feedbackIcons</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">validating</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">invalid</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">valid</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="o">||</span><span class="nx">i</span><span class="o">==</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">)){</span><span class="nx">k</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;has-success&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;has-error&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;has-feedback&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;&lt;i/&gt;&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;none&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;form-control-feedback&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-icon-for&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">insertAfter</span><span class="p">(</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">parent</span><span class="p">()</span><span class="o">:</span><span class="nx">j</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="nx">k</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;label&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="mi">0</span><span class="o">!=</span><span class="nx">k</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.input-group-addon&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;z-index&quot;</span><span class="o">:</span><span class="mi">100</span><span class="p">})}}</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">trigger</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="o">||</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="s2">&quot;.live.bv&quot;</span><span class="p">}).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">live</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;submitted&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;disabled&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">q</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;enabled&quot;</span><span class="o">:</span><span class="k">default</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">q</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">_exceedThreshold</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">validateField</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))})}</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;init.field.bv&quot;</span><span class="p">),{</span><span class="nx">field</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">element</span><span class="o">:</span><span class="nx">c</span><span class="p">})}},</span><span class="nx">_getMessageContainer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;form-group&quot;</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_getMessageContainer</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="sr">/^col-(xs|sm|md|lg)-\d+$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">||</span><span class="sr">/^col-(xs|sm|md|lg)-offset-\d+$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]))</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_getMessageContainer</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">_submit</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isValid</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;success.form.bv&quot;</span><span class="o">:</span><span class="s2">&quot;error.form.bv&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$submitButton</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_onSuccess</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_onError</span><span class="p">(</span><span class="nx">d</span><span class="p">))},</span><span class="nx">_isExcluded</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="p">){</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">b</span><span class="p">)}));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="o">||</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">excluded</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_exceedThreshold</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">threshold</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">threshold</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),[</span><span class="s2">&quot;button&quot;</span><span class="p">,</span><span class="s2">&quot;checkbox&quot;</span><span class="p">,</span><span class="s2">&quot;file&quot;</span><span class="p">,</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="s2">&quot;image&quot;</span><span class="p">,</span><span class="s2">&quot;radio&quot;</span><span class="p">,</span><span class="s2">&quot;reset&quot;</span><span class="p">,</span><span class="s2">&quot;submit&quot;</span><span class="p">]);</span><span class="k">return</span> <span class="nx">e</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">().</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">d</span><span class="p">},</span><span class="nx">_onError</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">isDefaultPrevented</span><span class="p">()){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;submitted&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">live</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">live</span><span class="o">=</span><span class="s2">&quot;enabled&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">)</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">f</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">f</span><span class="o">||</span><span class="s2">&quot;file&quot;</span><span class="o">==</span><span class="nx">f</span><span class="o">||</span><span class="s2">&quot;SELECT&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">tagName</span><span class="o">?</span><span class="s2">&quot;change&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">_changeEvent</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">trigger</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">trigger</span><span class="o">||</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="s2">&quot;.live.bv&quot;</span><span class="p">}).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_exceedThreshold</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">validateField</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))})}}(</span><span class="nx">d</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;.tab-pane&quot;</span><span class="p">);</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;a[href=&quot;#&#39;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s1">&#39;&quot;][data-toggle=&quot;tab&quot;]&#39;</span><span class="p">).</span><span class="nx">tab</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">focus</span><span class="p">()}}},</span><span class="nx">_onSuccess</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDefaultPrevented</span><span class="p">()</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">submitHandler</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">submitHandler</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">submitHandler</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">).</span><span class="nx">defaultSubmit</span><span class="p">())},</span><span class="nx">_onFieldValidated</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">validators</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{},</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">field</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">element</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">validator</span><span class="o">:</span><span class="nx">c</span><span class="p">};</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)){</span><span class="k">case</span> <span class="k">this</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;error.validator.bv&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;success.validator.bv&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">)}}</span><span class="nx">f</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALIDATING</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">e</span><span class="p">){</span><span class="nx">g</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">);</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">++</span><span class="p">}</span><span class="nx">f</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="p">]</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="p">.</span><span class="nx">not</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;success.field.bv&quot;</span><span class="p">),{</span><span class="nx">field</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">element</span><span class="o">:</span><span class="nx">b</span><span class="p">}))</span><span class="o">:</span><span class="mi">0</span><span class="o">==</span><span class="nx">f</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">f</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALIDATING</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;error.field.bv&quot;</span><span class="p">),{</span><span class="nx">field</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">element</span><span class="o">:</span><span class="nx">b</span><span class="p">}))},</span><span class="nx">getFieldElements</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">selector</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">selector</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;[name=&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">]},</span><span class="nx">disableSubmitButtons</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="s2">&quot;disabled&quot;</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">live</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">submitButtons</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">,</span><span class="s2">&quot;disabled&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">submitButtons</span><span class="p">).</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">validateField</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_submit</span><span class="p">(),</span><span class="k">this</span><span class="p">},</span><span class="nx">validateField</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">switch</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;string&quot;</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">enabled</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">validators</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_isExcluded</span><span class="p">(</span><span class="nx">l</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">j</span><span class="p">){</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.dfs.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.dfs.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">).</span><span class="nx">reject</span><span class="p">();</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="nx">m</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALIDATING</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">validate</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">j</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">updateStatus</span><span class="p">(</span><span class="nx">i</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALIDATING</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.dfs.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="s2">&quot;bv.dfs.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.messages&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.help-block[data-bv-validator=&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;][data-bv-for=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">updateStatus</span><span class="p">(</span><span class="nx">i</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">_submitIfValid</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">_submit</span><span class="p">()}))</span><span class="o">:</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">updateStatus</span><span class="p">(</span><span class="nx">i</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">f</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_onFieldValidated</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">updateStatus</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">switch</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;string&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;.form-group&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.messages&quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.help-block[data-bv-validator][data-bv-for=&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s1">&#39;[data-bv-validator=&quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.form-control-feedback[data-bv-icon-for=&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">container</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">j</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">validators</span><span class="p">)</span><span class="nx">j</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-result&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;.tab-pane&quot;</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;a[href=&quot;#&#39;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s1">&#39;&quot;][data-toggle=&quot;tab&quot;]&#39;</span><span class="p">).</span><span class="nx">parent</span><span class="p">()),</span><span class="nx">c</span><span class="p">){</span><span class="k">case</span> <span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALIDATING</span><span class="o">:</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;has-success&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;has-error&quot;</span><span class="p">),</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">valid</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">invalid</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">validating</span><span class="p">).</span><span class="nx">show</span><span class="p">(),</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;bv-tab-success&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;bv-tab-error&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="k">this</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="o">:</span><span class="nx">q</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;has-success&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;has-error&quot;</span><span class="p">),</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">valid</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">validating</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">invalid</span><span class="p">).</span><span class="nx">show</span><span class="p">(),</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;bv-tab-success&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;bv-tab-error&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="o">:</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">m</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s1">&#39;[data-bv-result=&quot;&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">length</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s1">&#39;[data-bv-result=&quot;&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">length</span><span class="o">==</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$submitButton</span><span class="o">?!</span><span class="k">this</span><span class="p">.</span><span class="nx">isValid</span><span class="p">()</span><span class="o">:!</span><span class="nx">q</span><span class="p">),</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">invalid</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">validating</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">valid</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">q</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">valid</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">invalid</span><span class="p">).</span><span class="nx">show</span><span class="p">()),</span><span class="nx">k</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;has-error has-success&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isValidContainer</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;has-success&quot;</span><span class="o">:</span><span class="s2">&quot;has-error&quot;</span><span class="p">),</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;bv-tab-success&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;bv-tab-error&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isValidContainer</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;bv-tab-success&quot;</span><span class="o">:</span><span class="s2">&quot;bv-tab-error&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="k">this</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="o">:</span><span class="k">default</span><span class="o">:</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;has-success&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;has-error&quot;</span><span class="p">),</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">valid</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">invalid</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">feedbackIcons</span><span class="p">.</span><span class="nx">validating</span><span class="p">).</span><span class="nx">hide</span><span class="p">(),</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;bv-tab-success&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;bv-tab-error&quot;</span><span class="p">)}</span><span class="k">switch</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">){</span><span class="k">case</span> <span class="nx">o</span><span class="o">&amp;&amp;</span><span class="s2">&quot;tooltip&quot;</span><span class="o">==</span><span class="nx">p</span><span class="o">:</span><span class="nx">q</span><span class="o">===!</span><span class="mi">1</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;cursor&quot;</span><span class="p">,</span><span class="s2">&quot;pointer&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">({</span><span class="nx">html</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s1">&#39;[data-bv-result=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">html</span><span class="p">()})</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;cursor&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">o</span><span class="o">&amp;&amp;</span><span class="s2">&quot;popover&quot;</span><span class="o">==</span><span class="nx">p</span><span class="o">:</span><span class="nx">q</span><span class="o">===!</span><span class="mi">1</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;cursor&quot;</span><span class="p">,</span><span class="s2">&quot;pointer&quot;</span><span class="p">).</span><span class="nx">popover</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">).</span><span class="nx">popover</span><span class="p">({</span><span class="nx">content</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s1">&#39;[data-bv-result=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">html</span><span class="p">(),</span><span class="nx">html</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">trigger</span><span class="o">:</span><span class="s2">&quot;hover click&quot;</span><span class="p">})</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;cursor&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">popover</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">c</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">show</span><span class="p">()</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">hide</span><span class="p">()}</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;status.field.bv&quot;</span><span class="p">),{</span><span class="nx">field</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">element</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">status</span><span class="o">:</span><span class="nx">c</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_onFieldValidated</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">isValid</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isValidField</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">isValidField</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">switch</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;string&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">enabled</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_isExcluded</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">validators</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">isValidContainer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;[data-bv-field]&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))});</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!=</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.messages&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.help-block[data-bv-validator][data-bv-for=&quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-validator&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="p">}).</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">defaultSubmit</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">$submitButton</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;&lt;input/&gt;&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="s2">&quot;hidden&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-submit-hidden&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">$submitButton</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)).</span><span class="nx">val</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$submitButton</span><span class="p">.</span><span class="nx">val</span><span class="p">()).</span><span class="nx">appendTo</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;submit.bv&quot;</span><span class="p">).</span><span class="nx">submit</span><span class="p">()},</span><span class="nx">getInvalidFields</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="p">},</span><span class="nx">getSubmitButton</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">$submitButton</span><span class="p">},</span><span class="nx">getErrors</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">switch</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">){</span><span class="k">case</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">:</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">}</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.messages&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.help-block[data-bv-for=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;][data-bv-result=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">STATUS_INVALID</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">html</span><span class="p">()}).</span><span class="nx">get</span><span class="p">())}),</span><span class="nx">d</span><span class="p">},</span><span class="nx">addField</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">switch</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;string&quot;</span><span class="o">:</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_parseOptions</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">i</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">i</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">i</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">add</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_initField</span><span class="p">(</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">||</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">h</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;added.field.bv&quot;</span><span class="p">),{</span><span class="nx">field</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">element</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">options</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">]}),</span><span class="k">this</span><span class="p">},</span><span class="nx">removeField</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">switch</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;string&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="p">.</span><span class="nx">not</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">not</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cacheFields</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">length</span><span class="o">||</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">b</span><span class="p">],(</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_initField</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;removed.field.bv&quot;</span><span class="p">),{</span><span class="nx">field</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">element</span><span class="o">:</span><span class="nx">c</span><span class="p">}),</span><span class="k">this</span><span class="p">},</span><span class="nx">resetForm</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">validators</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">removeData</span><span class="p">(</span><span class="s2">&quot;bv.dfs.&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">updateStatus</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="p">),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">),</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">f</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">f</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">).</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;selected&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">))}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">$invalidFields</span><span class="o">=</span><span class="nx">a</span><span class="p">([]),</span><span class="k">this</span><span class="p">.</span><span class="nx">$submitButton</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">enableFieldValidators</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">enabled</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">enabled</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">updateStatus</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">STATUS_NOT_VALIDATED</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">container</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">container</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bv.messages&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.help-block[data-bv-validator][data-bv-for=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">remove</span><span class="p">().</span><span class="nx">end</span><span class="p">().</span><span class="nx">end</span><span class="p">().</span><span class="nx">removeData</span><span class="p">(</span><span class="s2">&quot;bv.messages&quot;</span><span class="p">).</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;.form-group&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;has-feedback has-error has-success&quot;</span><span class="p">).</span><span class="nx">end</span><span class="p">().</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;.bv&quot;</span><span class="p">).</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;.form-group&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;i[data-bv-icon-for=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">))</span><span class="k">switch</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;tooltip&quot;</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;popover&quot;</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">popover</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">remove</span><span class="p">()}</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">fields</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">validators</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="s2">&quot;bv.result.&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">).</span><span class="nx">removeData</span><span class="p">(</span><span class="s2">&quot;bv.dfs.&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">)}}</span><span class="k">this</span><span class="p">.</span><span class="nx">disableSubmitButtons</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$form</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">elementClass</span><span class="p">).</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;.bv&quot;</span><span class="p">).</span><span class="nx">removeData</span><span class="p">(</span><span class="s2">&quot;bootstrapValidator&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;[data-bv-submit-hidden]&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">()}},</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bootstrapValidator&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;bootstrapValidator&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">)),</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">1</span><span class="p">))})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="o">=</span><span class="p">{},</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">Constructor</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="o">=</span><span class="p">{</span><span class="nx">date</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="nx">e3</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">9999</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">12</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="mi">31</span><span class="p">,</span><span class="mi">28</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">];</span><span class="k">if</span><span class="p">((</span><span class="nx">a</span><span class="o">%</span><span class="mi">400</span><span class="o">==</span><span class="mi">0</span><span class="o">||</span><span class="nx">a</span><span class="o">%</span><span class="mi">100</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">%</span><span class="mi">4</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">29</span><span class="p">),</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">||</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===!</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span><span class="k">return</span> <span class="nx">g</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">||</span><span class="nx">a</span><span class="o">==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">luhn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">9</span><span class="p">]],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="nx">e</span><span class="o">+=</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="mi">10</span><span class="p">)],</span><span class="nx">c</span><span class="o">^=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">%</span><span class="mi">10</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">},</span><span class="nx">mod_11_10</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="mi">10</span><span class="p">)</span><span class="o">%</span><span class="mi">11</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="mi">10</span><span class="p">))</span><span class="o">%</span><span class="mi">10</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">},</span><span class="nx">mod_37_36</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="nx">c</span><span class="p">)</span><span class="o">%</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">f</span><span class="p">)))</span><span class="o">%</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">e</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">base64</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="sr">/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">between</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="s2">&quot;min&quot;</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="s2">&quot;max&quot;</span><span class="p">,</span><span class="nx">inclusive</span><span class="o">:</span><span class="s2">&quot;inclusive&quot;</span><span class="p">},</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;range&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;min&quot;</span><span class="p">),</span><span class="nx">max</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;max&quot;</span><span class="p">)}</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">inclusive</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">inclusive</span><span class="o">?</span><span class="nx">d</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">:</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">callback</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">callback</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">d</span><span class="p">.</span><span class="nx">callback</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Deferred</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">callback</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;callback&quot;</span><span class="p">,</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">g</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">valid</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">message</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">message</span><span class="o">:</span><span class="kc">null</span><span class="p">),</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">choice</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="s2">&quot;min&quot;</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="s2">&quot;max&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">)).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;option&quot;</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;:selected&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">)).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;:checked&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="o">?!</span><span class="mi">1</span><span class="o">:!</span><span class="mi">0</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">creditCard</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="sr">/[^0-9-\s]+/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\D/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">luhn</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">AMERICAN_EXPRESS</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">15</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;34&quot;</span><span class="p">,</span><span class="s2">&quot;37&quot;</span><span class="p">]},</span><span class="nx">DINERS_CLUB</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;300&quot;</span><span class="p">,</span><span class="s2">&quot;301&quot;</span><span class="p">,</span><span class="s2">&quot;302&quot;</span><span class="p">,</span><span class="s2">&quot;303&quot;</span><span class="p">,</span><span class="s2">&quot;304&quot;</span><span class="p">,</span><span class="s2">&quot;305&quot;</span><span class="p">,</span><span class="s2">&quot;36&quot;</span><span class="p">]},</span><span class="nx">DINERS_CLUB_US</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;54&quot;</span><span class="p">,</span><span class="s2">&quot;55&quot;</span><span class="p">]},</span><span class="nx">DISCOVER</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;6011&quot;</span><span class="p">,</span><span class="s2">&quot;622126&quot;</span><span class="p">,</span><span class="s2">&quot;622127&quot;</span><span class="p">,</span><span class="s2">&quot;622128&quot;</span><span class="p">,</span><span class="s2">&quot;622129&quot;</span><span class="p">,</span><span class="s2">&quot;62213&quot;</span><span class="p">,</span><span class="s2">&quot;62214&quot;</span><span class="p">,</span><span class="s2">&quot;62215&quot;</span><span class="p">,</span><span class="s2">&quot;62216&quot;</span><span class="p">,</span><span class="s2">&quot;62217&quot;</span><span class="p">,</span><span class="s2">&quot;62218&quot;</span><span class="p">,</span><span class="s2">&quot;62219&quot;</span><span class="p">,</span><span class="s2">&quot;6222&quot;</span><span class="p">,</span><span class="s2">&quot;6223&quot;</span><span class="p">,</span><span class="s2">&quot;6224&quot;</span><span class="p">,</span><span class="s2">&quot;6225&quot;</span><span class="p">,</span><span class="s2">&quot;6226&quot;</span><span class="p">,</span><span class="s2">&quot;6227&quot;</span><span class="p">,</span><span class="s2">&quot;6228&quot;</span><span class="p">,</span><span class="s2">&quot;62290&quot;</span><span class="p">,</span><span class="s2">&quot;62291&quot;</span><span class="p">,</span><span class="s2">&quot;622920&quot;</span><span class="p">,</span><span class="s2">&quot;622921&quot;</span><span class="p">,</span><span class="s2">&quot;622922&quot;</span><span class="p">,</span><span class="s2">&quot;622923&quot;</span><span class="p">,</span><span class="s2">&quot;622924&quot;</span><span class="p">,</span><span class="s2">&quot;622925&quot;</span><span class="p">,</span><span class="s2">&quot;644&quot;</span><span class="p">,</span><span class="s2">&quot;645&quot;</span><span class="p">,</span><span class="s2">&quot;646&quot;</span><span class="p">,</span><span class="s2">&quot;647&quot;</span><span class="p">,</span><span class="s2">&quot;648&quot;</span><span class="p">,</span><span class="s2">&quot;649&quot;</span><span class="p">,</span><span class="s2">&quot;65&quot;</span><span class="p">]},</span><span class="nx">JCB</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;3528&quot;</span><span class="p">,</span><span class="s2">&quot;3529&quot;</span><span class="p">,</span><span class="s2">&quot;353&quot;</span><span class="p">,</span><span class="s2">&quot;354&quot;</span><span class="p">,</span><span class="s2">&quot;355&quot;</span><span class="p">,</span><span class="s2">&quot;356&quot;</span><span class="p">,</span><span class="s2">&quot;357&quot;</span><span class="p">,</span><span class="s2">&quot;358&quot;</span><span class="p">]},</span><span class="nx">LASER</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">19</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;6304&quot;</span><span class="p">,</span><span class="s2">&quot;6706&quot;</span><span class="p">,</span><span class="s2">&quot;6771&quot;</span><span class="p">,</span><span class="s2">&quot;6709&quot;</span><span class="p">]},</span><span class="nx">MAESTRO</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">12</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">19</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;5018&quot;</span><span class="p">,</span><span class="s2">&quot;5020&quot;</span><span class="p">,</span><span class="s2">&quot;5038&quot;</span><span class="p">,</span><span class="s2">&quot;6304&quot;</span><span class="p">,</span><span class="s2">&quot;6759&quot;</span><span class="p">,</span><span class="s2">&quot;6761&quot;</span><span class="p">,</span><span class="s2">&quot;6762&quot;</span><span class="p">,</span><span class="s2">&quot;6763&quot;</span><span class="p">,</span><span class="s2">&quot;6764&quot;</span><span class="p">,</span><span class="s2">&quot;6765&quot;</span><span class="p">,</span><span class="s2">&quot;6766&quot;</span><span class="p">]},</span><span class="nx">MASTERCARD</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;51&quot;</span><span class="p">,</span><span class="s2">&quot;52&quot;</span><span class="p">,</span><span class="s2">&quot;53&quot;</span><span class="p">,</span><span class="s2">&quot;54&quot;</span><span class="p">,</span><span class="s2">&quot;55&quot;</span><span class="p">]},</span><span class="nx">SOLO</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">19</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;6334&quot;</span><span class="p">,</span><span class="s2">&quot;6767&quot;</span><span class="p">]},</span><span class="nx">UNIONPAY</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">19</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;622126&quot;</span><span class="p">,</span><span class="s2">&quot;622127&quot;</span><span class="p">,</span><span class="s2">&quot;622128&quot;</span><span class="p">,</span><span class="s2">&quot;622129&quot;</span><span class="p">,</span><span class="s2">&quot;62213&quot;</span><span class="p">,</span><span class="s2">&quot;62214&quot;</span><span class="p">,</span><span class="s2">&quot;62215&quot;</span><span class="p">,</span><span class="s2">&quot;62216&quot;</span><span class="p">,</span><span class="s2">&quot;62217&quot;</span><span class="p">,</span><span class="s2">&quot;62218&quot;</span><span class="p">,</span><span class="s2">&quot;62219&quot;</span><span class="p">,</span><span class="s2">&quot;6222&quot;</span><span class="p">,</span><span class="s2">&quot;6223&quot;</span><span class="p">,</span><span class="s2">&quot;6224&quot;</span><span class="p">,</span><span class="s2">&quot;6225&quot;</span><span class="p">,</span><span class="s2">&quot;6226&quot;</span><span class="p">,</span><span class="s2">&quot;6227&quot;</span><span class="p">,</span><span class="s2">&quot;6228&quot;</span><span class="p">,</span><span class="s2">&quot;62290&quot;</span><span class="p">,</span><span class="s2">&quot;62291&quot;</span><span class="p">,</span><span class="s2">&quot;622920&quot;</span><span class="p">,</span><span class="s2">&quot;622921&quot;</span><span class="p">,</span><span class="s2">&quot;622922&quot;</span><span class="p">,</span><span class="s2">&quot;622923&quot;</span><span class="p">,</span><span class="s2">&quot;622924&quot;</span><span class="p">,</span><span class="s2">&quot;622925&quot;</span><span class="p">]},</span><span class="nx">VISA</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;4&quot;</span><span class="p">]}};</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">g</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">g</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">prefix</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">prefix</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">length</span><span class="p">)</span><span class="o">==</span><span class="nx">g</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">prefix</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">length</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">cusip</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="o">!</span><span class="sr">/^[0-9A-Z]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">&gt;=</span><span class="s2">&quot;A&quot;</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="s2">&quot;Z&quot;</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">-</span><span class="s2">&quot;A&quot;</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">10</span><span class="o">:</span><span class="nx">a</span><span class="p">}),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="nx">h</span><span class="o">%</span><span class="mi">2</span><span class="o">!=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">*=</span><span class="mi">2</span><span class="p">),</span><span class="nx">i</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">-=</span><span class="mi">9</span><span class="p">),</span><span class="nx">g</span><span class="o">+=</span><span class="nx">i</span><span class="p">}</span><span class="k">return</span> <span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="o">-</span><span class="nx">g</span><span class="o">%</span><span class="mi">10</span><span class="p">)</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">g</span><span class="o">==</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">]}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">cvv</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">ccfield</span><span class="o">:</span><span class="s2">&quot;creditCardField&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{3,4}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">creditCardField</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">creditCardField</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\D/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">AMERICAN_EXPRESS</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">15</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;34&quot;</span><span class="p">,</span><span class="s2">&quot;37&quot;</span><span class="p">]},</span><span class="nx">DINERS_CLUB</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;300&quot;</span><span class="p">,</span><span class="s2">&quot;301&quot;</span><span class="p">,</span><span class="s2">&quot;302&quot;</span><span class="p">,</span><span class="s2">&quot;303&quot;</span><span class="p">,</span><span class="s2">&quot;304&quot;</span><span class="p">,</span><span class="s2">&quot;305&quot;</span><span class="p">,</span><span class="s2">&quot;36&quot;</span><span class="p">]},</span><span class="nx">DINERS_CLUB_US</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;54&quot;</span><span class="p">,</span><span class="s2">&quot;55&quot;</span><span class="p">]},</span><span class="nx">DISCOVER</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;6011&quot;</span><span class="p">,</span><span class="s2">&quot;622126&quot;</span><span class="p">,</span><span class="s2">&quot;622127&quot;</span><span class="p">,</span><span class="s2">&quot;622128&quot;</span><span class="p">,</span><span class="s2">&quot;622129&quot;</span><span class="p">,</span><span class="s2">&quot;62213&quot;</span><span class="p">,</span><span class="s2">&quot;62214&quot;</span><span class="p">,</span><span class="s2">&quot;62215&quot;</span><span class="p">,</span><span class="s2">&quot;62216&quot;</span><span class="p">,</span><span class="s2">&quot;62217&quot;</span><span class="p">,</span><span class="s2">&quot;62218&quot;</span><span class="p">,</span><span class="s2">&quot;62219&quot;</span><span class="p">,</span><span class="s2">&quot;6222&quot;</span><span class="p">,</span><span class="s2">&quot;6223&quot;</span><span class="p">,</span><span class="s2">&quot;6224&quot;</span><span class="p">,</span><span class="s2">&quot;6225&quot;</span><span class="p">,</span><span class="s2">&quot;6226&quot;</span><span class="p">,</span><span class="s2">&quot;6227&quot;</span><span class="p">,</span><span class="s2">&quot;6228&quot;</span><span class="p">,</span><span class="s2">&quot;62290&quot;</span><span class="p">,</span><span class="s2">&quot;62291&quot;</span><span class="p">,</span><span class="s2">&quot;622920&quot;</span><span class="p">,</span><span class="s2">&quot;622921&quot;</span><span class="p">,</span><span class="s2">&quot;622922&quot;</span><span class="p">,</span><span class="s2">&quot;622923&quot;</span><span class="p">,</span><span class="s2">&quot;622924&quot;</span><span class="p">,</span><span class="s2">&quot;622925&quot;</span><span class="p">,</span><span class="s2">&quot;644&quot;</span><span class="p">,</span><span class="s2">&quot;645&quot;</span><span class="p">,</span><span class="s2">&quot;646&quot;</span><span class="p">,</span><span class="s2">&quot;647&quot;</span><span class="p">,</span><span class="s2">&quot;648&quot;</span><span class="p">,</span><span class="s2">&quot;649&quot;</span><span class="p">,</span><span class="s2">&quot;65&quot;</span><span class="p">]},</span><span class="nx">JCB</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;3528&quot;</span><span class="p">,</span><span class="s2">&quot;3529&quot;</span><span class="p">,</span><span class="s2">&quot;353&quot;</span><span class="p">,</span><span class="s2">&quot;354&quot;</span><span class="p">,</span><span class="s2">&quot;355&quot;</span><span class="p">,</span><span class="s2">&quot;356&quot;</span><span class="p">,</span><span class="s2">&quot;357&quot;</span><span class="p">,</span><span class="s2">&quot;358&quot;</span><span class="p">]},</span><span class="nx">LASER</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">19</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;6304&quot;</span><span class="p">,</span><span class="s2">&quot;6706&quot;</span><span class="p">,</span><span class="s2">&quot;6771&quot;</span><span class="p">,</span><span class="s2">&quot;6709&quot;</span><span class="p">]},</span><span class="nx">MAESTRO</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">12</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">19</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;5018&quot;</span><span class="p">,</span><span class="s2">&quot;5020&quot;</span><span class="p">,</span><span class="s2">&quot;5038&quot;</span><span class="p">,</span><span class="s2">&quot;6304&quot;</span><span class="p">,</span><span class="s2">&quot;6759&quot;</span><span class="p">,</span><span class="s2">&quot;6761&quot;</span><span class="p">,</span><span class="s2">&quot;6762&quot;</span><span class="p">,</span><span class="s2">&quot;6763&quot;</span><span class="p">,</span><span class="s2">&quot;6764&quot;</span><span class="p">,</span><span class="s2">&quot;6765&quot;</span><span class="p">,</span><span class="s2">&quot;6766&quot;</span><span class="p">]},</span><span class="nx">MASTERCARD</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;51&quot;</span><span class="p">,</span><span class="s2">&quot;52&quot;</span><span class="p">,</span><span class="s2">&quot;53&quot;</span><span class="p">,</span><span class="s2">&quot;54&quot;</span><span class="p">,</span><span class="s2">&quot;55&quot;</span><span class="p">]},</span><span class="nx">SOLO</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">19</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;6334&quot;</span><span class="p">,</span><span class="s2">&quot;6767&quot;</span><span class="p">]},</span><span class="nx">UNIONPAY</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">18</span><span class="p">,</span><span class="mi">19</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;622126&quot;</span><span class="p">,</span><span class="s2">&quot;622127&quot;</span><span class="p">,</span><span class="s2">&quot;622128&quot;</span><span class="p">,</span><span class="s2">&quot;622129&quot;</span><span class="p">,</span><span class="s2">&quot;62213&quot;</span><span class="p">,</span><span class="s2">&quot;62214&quot;</span><span class="p">,</span><span class="s2">&quot;62215&quot;</span><span class="p">,</span><span class="s2">&quot;62216&quot;</span><span class="p">,</span><span class="s2">&quot;62217&quot;</span><span class="p">,</span><span class="s2">&quot;62218&quot;</span><span class="p">,</span><span class="s2">&quot;62219&quot;</span><span class="p">,</span><span class="s2">&quot;6222&quot;</span><span class="p">,</span><span class="s2">&quot;6223&quot;</span><span class="p">,</span><span class="s2">&quot;6224&quot;</span><span class="p">,</span><span class="s2">&quot;6225&quot;</span><span class="p">,</span><span class="s2">&quot;6226&quot;</span><span class="p">,</span><span class="s2">&quot;6227&quot;</span><span class="p">,</span><span class="s2">&quot;6228&quot;</span><span class="p">,</span><span class="s2">&quot;62290&quot;</span><span class="p">,</span><span class="s2">&quot;62291&quot;</span><span class="p">,</span><span class="s2">&quot;622920&quot;</span><span class="p">,</span><span class="s2">&quot;622921&quot;</span><span class="p">,</span><span class="s2">&quot;622922&quot;</span><span class="p">,</span><span class="s2">&quot;622923&quot;</span><span class="p">,</span><span class="s2">&quot;622924&quot;</span><span class="p">,</span><span class="s2">&quot;622925&quot;</span><span class="p">]},</span><span class="nx">VISA</span><span class="o">:</span><span class="p">{</span><span class="nx">length</span><span class="o">:</span><span class="p">[</span><span class="mi">16</span><span class="p">],</span><span class="nx">prefix</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;4&quot;</span><span class="p">]}},</span><span class="nx">j</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span> <span class="k">in</span> <span class="nx">i</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">prefix</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">prefix</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">length</span><span class="p">)</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">prefix</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">length</span><span class="p">)){</span><span class="nx">j</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">j</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="s2">&quot;AMERICAN_EXPRESS&quot;</span><span class="o">==</span><span class="nx">j</span><span class="o">?</span><span class="mi">4</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="mi">3</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">date</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">format</span><span class="o">:</span><span class="s2">&quot;format&quot;</span><span class="p">,</span><span class="nx">separator</span><span class="o">:</span><span class="s2">&quot;separator&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">format</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">format</span><span class="o">||</span><span class="s2">&quot;MM/DD/YYYY&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">format</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">separator</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">||</span><span class="p">(</span><span class="nx">m</span><span class="o">=-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">k</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;/&quot;</span><span class="o">:-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">k</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">m</span><span class="o">||-</span><span class="mi">1</span><span class="o">==</span><span class="nx">k</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">m</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="s2">&quot;YYYY&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">)],</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="s2">&quot;MM&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">)],</span><span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="s2">&quot;DD&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">)],</span><span class="nx">q</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">||</span><span class="nx">s</span><span class="o">&gt;</span><span class="mi">60</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">r</span><span class="o">||</span><span class="nx">r</span><span class="o">&gt;=</span><span class="mi">24</span><span class="o">||</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">&gt;</span><span class="mi">12</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">q</span><span class="o">||</span><span class="nx">q</span><span class="o">&gt;</span><span class="mi">59</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">p</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">p</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">different</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">field</span><span class="o">:</span><span class="s2">&quot;field&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">field</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">d</span><span class="o">!=</span><span class="nx">e</span><span class="p">.</span><span class="nx">val</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">updateStatus</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">field</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="p">,</span><span class="s2">&quot;different&quot;</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">digits</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="sr">/^\d+$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">ean</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^(\d{8}|\d{12}|\d{13})$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">8</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="o">%</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="mi">10</span><span class="o">-</span><span class="nx">e</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">e</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">emailAddress</span><span class="o">=</span><span class="p">{</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;email&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="sr">/^(([^&lt;&gt;()[\]\\.,;:\s@\&quot;]+(\.[^&lt;&gt;()[\]\\.,;:\s@\&quot;]+)*)|(\&quot;.+\&quot;))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">file</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">extension</span><span class="o">:</span><span class="s2">&quot;extension&quot;</span><span class="p">,</span><span class="nx">maxsize</span><span class="o">:</span><span class="s2">&quot;maxSize&quot;</span><span class="p">,</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;type&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">extension</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">extension</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">File</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">FileList</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">FileReader</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">files</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxSize</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">size</span><span class="o">&gt;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxSize</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">name</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">name</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">g</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">g</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">h</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">g</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">g</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">greaterThan</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="nx">inclusive</span><span class="o">:</span><span class="s2">&quot;inclusive&quot;</span><span class="p">},</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;min&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="p">}</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">inclusive</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">inclusive</span><span class="o">?</span><span class="nx">d</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">grid</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="sr">/^[GRID:]*([0-9A-Z]{2})[-\s]*([0-9A-Z]{5})[-\s]*([0-9A-Z]{10})[-\s]*([0-9A-Z]{1})$/g</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="s2">&quot;GRID:&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">5</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">mod_37_36</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">:!</span><span class="mi">1</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">hex</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="sr">/^[0-9a-fA-F]+$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">hexColor</span><span class="o">=</span><span class="p">{</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;color&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="sr">/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">iban</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">country</span><span class="o">:</span><span class="s2">&quot;country&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">AD</span><span class="o">:</span><span class="s2">&quot;AD[0-9]{2}[0-9]{4}[0-9]{4}[A-Z0-9]{12}&quot;</span><span class="p">,</span><span class="nx">AE</span><span class="o">:</span><span class="s2">&quot;AE[0-9]{2}[0-9]{3}[0-9]{16}&quot;</span><span class="p">,</span><span class="nx">AL</span><span class="o">:</span><span class="s2">&quot;AL[0-9]{2}[0-9]{8}[A-Z0-9]{16}&quot;</span><span class="p">,</span><span class="nx">AO</span><span class="o">:</span><span class="s2">&quot;AO[0-9]{2}[0-9]{21}&quot;</span><span class="p">,</span><span class="nx">AT</span><span class="o">:</span><span class="s2">&quot;AT[0-9]{2}[0-9]{5}[0-9]{11}&quot;</span><span class="p">,</span><span class="nx">AZ</span><span class="o">:</span><span class="s2">&quot;AZ[0-9]{2}[A-Z]{4}[A-Z0-9]{20}&quot;</span><span class="p">,</span><span class="nx">BA</span><span class="o">:</span><span class="s2">&quot;BA[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{8}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">BE</span><span class="o">:</span><span class="s2">&quot;BE[0-9]{2}[0-9]{3}[0-9]{7}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">BF</span><span class="o">:</span><span class="s2">&quot;BF[0-9]{2}[0-9]{23}&quot;</span><span class="p">,</span><span class="nx">BG</span><span class="o">:</span><span class="s2">&quot;BG[0-9]{2}[A-Z]{4}[0-9]{4}[0-9]{2}[A-Z0-9]{8}&quot;</span><span class="p">,</span><span class="nx">BH</span><span class="o">:</span><span class="s2">&quot;BH[0-9]{2}[A-Z]{4}[A-Z0-9]{14}&quot;</span><span class="p">,</span><span class="nx">BI</span><span class="o">:</span><span class="s2">&quot;BI[0-9]{2}[0-9]{12}&quot;</span><span class="p">,</span><span class="nx">BJ</span><span class="o">:</span><span class="s2">&quot;BJ[0-9]{2}[A-Z]{1}[0-9]{23}&quot;</span><span class="p">,</span><span class="nx">BR</span><span class="o">:</span><span class="s2">&quot;BR[0-9]{2}[0-9]{8}[0-9]{5}[0-9]{10}[A-Z][A-Z0-9]&quot;</span><span class="p">,</span><span class="nx">CH</span><span class="o">:</span><span class="s2">&quot;CH[0-9]{2}[0-9]{5}[A-Z0-9]{12}&quot;</span><span class="p">,</span><span class="nx">CI</span><span class="o">:</span><span class="s2">&quot;CI[0-9]{2}[A-Z]{1}[0-9]{23}&quot;</span><span class="p">,</span><span class="nx">CM</span><span class="o">:</span><span class="s2">&quot;CM[0-9]{2}[0-9]{23}&quot;</span><span class="p">,</span><span class="nx">CR</span><span class="o">:</span><span class="s2">&quot;CR[0-9]{2}[0-9]{3}[0-9]{14}&quot;</span><span class="p">,</span><span class="nx">CV</span><span class="o">:</span><span class="s2">&quot;CV[0-9]{2}[0-9]{21}&quot;</span><span class="p">,</span><span class="nx">CY</span><span class="o">:</span><span class="s2">&quot;CY[0-9]{2}[0-9]{3}[0-9]{5}[A-Z0-9]{16}&quot;</span><span class="p">,</span><span class="nx">CZ</span><span class="o">:</span><span class="s2">&quot;CZ[0-9]{2}[0-9]{20}&quot;</span><span class="p">,</span><span class="nx">DE</span><span class="o">:</span><span class="s2">&quot;DE[0-9]{2}[0-9]{8}[0-9]{10}&quot;</span><span class="p">,</span><span class="nx">DK</span><span class="o">:</span><span class="s2">&quot;DK[0-9]{2}[0-9]{14}&quot;</span><span class="p">,</span><span class="nx">DO</span><span class="o">:</span><span class="s2">&quot;DO[0-9]{2}[A-Z0-9]{4}[0-9]{20}&quot;</span><span class="p">,</span><span class="nx">DZ</span><span class="o">:</span><span class="s2">&quot;DZ[0-9]{2}[0-9]{20}&quot;</span><span class="p">,</span><span class="nx">EE</span><span class="o">:</span><span class="s2">&quot;EE[0-9]{2}[0-9]{2}[0-9]{2}[0-9]{11}[0-9]{1}&quot;</span><span class="p">,</span><span class="nx">ES</span><span class="o">:</span><span class="s2">&quot;ES[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{1}[0-9]{1}[0-9]{10}&quot;</span><span class="p">,</span><span class="nx">FI</span><span class="o">:</span><span class="s2">&quot;FI[0-9]{2}[0-9]{6}[0-9]{7}[0-9]{1}&quot;</span><span class="p">,</span><span class="nx">FO</span><span class="o">:</span><span class="s2">&quot;FO[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}&quot;</span><span class="p">,</span><span class="nx">FR</span><span class="o">:</span><span class="s2">&quot;FR[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">GB</span><span class="o">:</span><span class="s2">&quot;GB[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}&quot;</span><span class="p">,</span><span class="nx">GE</span><span class="o">:</span><span class="s2">&quot;GE[0-9]{2}[A-Z]{2}[0-9]{16}&quot;</span><span class="p">,</span><span class="nx">GI</span><span class="o">:</span><span class="s2">&quot;GI[0-9]{2}[A-Z]{4}[A-Z0-9]{15}&quot;</span><span class="p">,</span><span class="nx">GL</span><span class="o">:</span><span class="s2">&quot;GL[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}&quot;</span><span class="p">,</span><span class="nx">GR</span><span class="o">:</span><span class="s2">&quot;GR[0-9]{2}[0-9]{3}[0-9]{4}[A-Z0-9]{16}&quot;</span><span class="p">,</span><span class="nx">GT</span><span class="o">:</span><span class="s2">&quot;GT[0-9]{2}[A-Z0-9]{4}[A-Z0-9]{20}&quot;</span><span class="p">,</span><span class="nx">HR</span><span class="o">:</span><span class="s2">&quot;HR[0-9]{2}[0-9]{7}[0-9]{10}&quot;</span><span class="p">,</span><span class="nx">HU</span><span class="o">:</span><span class="s2">&quot;HU[0-9]{2}[0-9]{3}[0-9]{4}[0-9]{1}[0-9]{15}[0-9]{1}&quot;</span><span class="p">,</span><span class="nx">IE</span><span class="o">:</span><span class="s2">&quot;IE[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}&quot;</span><span class="p">,</span><span class="nx">IL</span><span class="o">:</span><span class="s2">&quot;IL[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{13}&quot;</span><span class="p">,</span><span class="nx">IR</span><span class="o">:</span><span class="s2">&quot;IR[0-9]{2}[0-9]{22}&quot;</span><span class="p">,</span><span class="nx">IS</span><span class="o">:</span><span class="s2">&quot;IS[0-9]{2}[0-9]{4}[0-9]{2}[0-9]{6}[0-9]{10}&quot;</span><span class="p">,</span><span class="nx">IT</span><span class="o">:</span><span class="s2">&quot;IT[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}&quot;</span><span class="p">,</span><span class="nx">JO</span><span class="o">:</span><span class="s2">&quot;JO[0-9]{2}[A-Z]{4}[0-9]{4}[0]{8}[A-Z0-9]{10}&quot;</span><span class="p">,</span><span class="nx">KW</span><span class="o">:</span><span class="s2">&quot;KW[0-9]{2}[A-Z]{4}[0-9]{22}&quot;</span><span class="p">,</span><span class="nx">KZ</span><span class="o">:</span><span class="s2">&quot;KZ[0-9]{2}[0-9]{3}[A-Z0-9]{13}&quot;</span><span class="p">,</span><span class="nx">LB</span><span class="o">:</span><span class="s2">&quot;LB[0-9]{2}[0-9]{4}[A-Z0-9]{20}&quot;</span><span class="p">,</span><span class="nx">LI</span><span class="o">:</span><span class="s2">&quot;LI[0-9]{2}[0-9]{5}[A-Z0-9]{12}&quot;</span><span class="p">,</span><span class="nx">LT</span><span class="o">:</span><span class="s2">&quot;LT[0-9]{2}[0-9]{5}[0-9]{11}&quot;</span><span class="p">,</span><span class="nx">LU</span><span class="o">:</span><span class="s2">&quot;LU[0-9]{2}[0-9]{3}[A-Z0-9]{13}&quot;</span><span class="p">,</span><span class="nx">LV</span><span class="o">:</span><span class="s2">&quot;LV[0-9]{2}[A-Z]{4}[A-Z0-9]{13}&quot;</span><span class="p">,</span><span class="nx">MC</span><span class="o">:</span><span class="s2">&quot;MC[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">MD</span><span class="o">:</span><span class="s2">&quot;MD[0-9]{2}[A-Z0-9]{20}&quot;</span><span class="p">,</span><span class="nx">ME</span><span class="o">:</span><span class="s2">&quot;ME[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">MG</span><span class="o">:</span><span class="s2">&quot;MG[0-9]{2}[0-9]{23}&quot;</span><span class="p">,</span><span class="nx">MK</span><span class="o">:</span><span class="s2">&quot;MK[0-9]{2}[0-9]{3}[A-Z0-9]{10}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">ML</span><span class="o">:</span><span class="s2">&quot;ML[0-9]{2}[A-Z]{1}[0-9]{23}&quot;</span><span class="p">,</span><span class="nx">MR</span><span class="o">:</span><span class="s2">&quot;MR13[0-9]{5}[0-9]{5}[0-9]{11}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">MT</span><span class="o">:</span><span class="s2">&quot;MT[0-9]{2}[A-Z]{4}[0-9]{5}[A-Z0-9]{18}&quot;</span><span class="p">,</span><span class="nx">MU</span><span class="o">:</span><span class="s2">&quot;MU[0-9]{2}[A-Z]{4}[0-9]{2}[0-9]{2}[0-9]{12}[0-9]{3}[A-Z]{3}&quot;</span><span class="p">,</span><span class="nx">MZ</span><span class="o">:</span><span class="s2">&quot;MZ[0-9]{2}[0-9]{21}&quot;</span><span class="p">,</span><span class="nx">NL</span><span class="o">:</span><span class="s2">&quot;NL[0-9]{2}[A-Z]{4}[0-9]{10}&quot;</span><span class="p">,</span><span class="nx">NO</span><span class="o">:</span><span class="s2">&quot;NO[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{1}&quot;</span><span class="p">,</span><span class="nx">PK</span><span class="o">:</span><span class="s2">&quot;PK[0-9]{2}[A-Z]{4}[A-Z0-9]{16}&quot;</span><span class="p">,</span><span class="nx">PL</span><span class="o">:</span><span class="s2">&quot;PL[0-9]{2}[0-9]{8}[0-9]{16}&quot;</span><span class="p">,</span><span class="nx">PS</span><span class="o">:</span><span class="s2">&quot;PS[0-9]{2}[A-Z]{4}[A-Z0-9]{21}&quot;</span><span class="p">,</span><span class="nx">PT</span><span class="o">:</span><span class="s2">&quot;PT[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{11}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">QA</span><span class="o">:</span><span class="s2">&quot;QA[0-9]{2}[A-Z]{4}[A-Z0-9]{21}&quot;</span><span class="p">,</span><span class="nx">RO</span><span class="o">:</span><span class="s2">&quot;RO[0-9]{2}[A-Z]{4}[A-Z0-9]{16}&quot;</span><span class="p">,</span><span class="nx">RS</span><span class="o">:</span><span class="s2">&quot;RS[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">SA</span><span class="o">:</span><span class="s2">&quot;SA[0-9]{2}[0-9]{2}[A-Z0-9]{18}&quot;</span><span class="p">,</span><span class="nx">SE</span><span class="o">:</span><span class="s2">&quot;SE[0-9]{2}[0-9]{3}[0-9]{16}[0-9]{1}&quot;</span><span class="p">,</span><span class="nx">SI</span><span class="o">:</span><span class="s2">&quot;SI[0-9]{2}[0-9]{5}[0-9]{8}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">SK</span><span class="o">:</span><span class="s2">&quot;SK[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{10}&quot;</span><span class="p">,</span><span class="nx">SM</span><span class="o">:</span><span class="s2">&quot;SM[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}&quot;</span><span class="p">,</span><span class="nx">SN</span><span class="o">:</span><span class="s2">&quot;SN[0-9]{2}[A-Z]{1}[0-9]{23}&quot;</span><span class="p">,</span><span class="nx">TN</span><span class="o">:</span><span class="s2">&quot;TN59[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}&quot;</span><span class="p">,</span><span class="nx">TR</span><span class="o">:</span><span class="s2">&quot;TR[0-9]{2}[0-9]{5}[A-Z0-9]{1}[A-Z0-9]{16}&quot;</span><span class="p">,</span><span class="nx">VG</span><span class="o">:</span><span class="s2">&quot;VG[0-9]{2}[A-Z]{4}[0-9]{16}&quot;</span><span class="p">};</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^a-zA-Z0-9]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">country</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">])</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;$&quot;</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">&gt;=</span><span class="s2">&quot;A&quot;</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="s2">&quot;Z&quot;</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">-</span><span class="s2">&quot;A&quot;</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">10</span><span class="o">:</span><span class="nx">a</span><span class="p">}),</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="o">++</span><span class="nx">j</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="mi">10</span><span class="p">))</span><span class="o">%</span><span class="mi">97</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">h</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">country</span><span class="o">:</span><span class="s2">&quot;country&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">country</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;_&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span></div><div class='line' id='LC13'><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">](</span><span class="nx">d</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">_validateJMBG</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\d{13}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">)),</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">31</span><span class="o">||</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">12</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">6</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">+=</span><span class="p">(</span><span class="mi">7</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="mi">6</span><span class="p">)));</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">g</span><span class="o">%</span><span class="mi">11</span><span class="p">,(</span><span class="mi">10</span><span class="o">==</span><span class="nx">g</span><span class="o">||</span><span class="mi">11</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">g</span><span class="o">!=</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()){</span><span class="k">case</span><span class="s2">&quot;BA&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="o">&gt;=</span><span class="mi">10</span><span class="o">&amp;&amp;</span><span class="mi">19</span><span class="o">&gt;=</span><span class="nx">e</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;MK&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="o">&gt;=</span><span class="mi">41</span><span class="o">&amp;&amp;</span><span class="mi">49</span><span class="o">&gt;=</span><span class="nx">e</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;ME&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="o">&gt;=</span><span class="mi">20</span><span class="o">&amp;&amp;</span><span class="mi">29</span><span class="o">&gt;=</span><span class="nx">e</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;RS&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="o">&gt;=</span><span class="mi">70</span><span class="o">&amp;&amp;</span><span class="mi">99</span><span class="o">&gt;=</span><span class="nx">e</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;SI&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="o">&gt;=</span><span class="mi">50</span><span class="o">&amp;&amp;</span><span class="mi">59</span><span class="o">&gt;=</span><span class="nx">e</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">_ba</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_validateJMBG</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;BA&quot;</span><span class="p">)},</span><span class="nx">_mk</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_validateJMBG</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;MK&quot;</span><span class="p">)},</span><span class="nx">_me</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_validateJMBG</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;ME&quot;</span><span class="p">)},</span><span class="nx">_rs</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_validateJMBG</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;RS&quot;</span><span class="p">)},</span><span class="nx">_si</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_validateJMBG</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;SI&quot;</span><span class="p">)},</span><span class="nx">_bg</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\d{10}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="sr">/^\d{6}\s\d{3}\s\d{1}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="mi">1900</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">40</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="mi">100</span><span class="p">,</span><span class="nx">d</span><span class="o">-=</span><span class="mi">40</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">20</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">-=</span><span class="mi">100</span><span class="p">,</span><span class="nx">d</span><span class="o">-=</span><span class="mi">20</span><span class="p">),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">9</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">*</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">%</span><span class="mi">11</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">f</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_br</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="sr">/^1{11}|2{11}|3{11}|4{11}|5{11}|6{11}|7{11}|8{11}|9{11}|0{11}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\d{11}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="sr">/^\d{3}\.\d{3}\.\d{3}-\d{2}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\./g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">9</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="p">(</span><span class="mi">10</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="p">,(</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="mi">11</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">9</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="p">(</span><span class="mi">11</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">d</span><span class="o">%</span><span class="mi">11</span><span class="p">,(</span><span class="mi">10</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="mi">11</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">10</span><span class="p">)},</span><span class="nx">_ch</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^756[\.]{0,1}[0-9]{4}[\.]{0,1}[0-9]{4}[\.]{0,1}[0-9]{2}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\D/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">8</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="o">*</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="o">%</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="mi">10</span><span class="o">-</span><span class="nx">c</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">c</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_cl</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\d{7,8}[-]{0,1}[0-9K]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\D/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">9</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="mi">11</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="o">:</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;K&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">8</span><span class="p">)},</span><span class="nx">_cz</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\d{9,10}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">1900</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">%</span><span class="mi">50</span><span class="o">%</span><span class="mi">20</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="mi">9</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;=</span><span class="mi">1980</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">-=</span><span class="mi">100</span><span class="p">),</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">1953</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="mi">1954</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="mi">100</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">9</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">%</span><span class="mi">11</span><span class="p">;</span><span class="k">return</span> <span class="mi">1985</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">%=</span><span class="mi">10</span><span class="p">),</span><span class="nx">f</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">_dk</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{6}[-]{0,1}[0-9]{4}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">){</span><span class="k">case</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="s2">&quot;5678&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">58</span><span class="o">:</span><span class="nx">e</span><span class="o">+=</span><span class="mi">1800</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="s2">&quot;0123&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span><span class="o">:</span><span class="k">case</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="s2">&quot;49&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">37</span><span class="o">:</span><span class="nx">e</span><span class="o">+=</span><span class="mi">1900</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">e</span><span class="o">+=</span><span class="mi">2</span><span class="nx">e3</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">_ee</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_lt</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">_es</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9A-Z]{8}[-]{0,1}[0-9A-Z]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="sr">/^[XYZ][-]{0,1}[0-9]{7}[-]{0,1}[0-9A-Z]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;XYZ&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">8</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;TRWAGMYFPDXBNJZSQVHLCKE&quot;</span><span class="p">[</span><span class="nx">c</span><span class="o">%</span><span class="mi">23</span><span class="p">],</span><span class="nx">c</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_fi</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{6}[-+A][0-9]{3}[0-9ABCDEFHJKLMNPRSTUVWXY]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;+&quot;</span><span class="o">:</span><span class="mi">1800</span><span class="p">,</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="mi">1900</span><span class="p">,</span><span class="nx">A</span><span class="o">:</span><span class="mi">2</span><span class="nx">e3</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">6</span><span class="p">)]</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">h</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="s2">&quot;0123456789ABCDEFHJKLMNPRSTUVWXY&quot;</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">h</span><span class="o">%</span><span class="mi">31</span><span class="p">)</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">10</span><span class="p">)},</span><span class="nx">_hr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="sr">/^[0-9]{11}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">mod_11_10</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_ie</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\d{7}[A-W][AHWTX]?$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">7</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;WABCDEFGHIJKLMNOPQRSTUV&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">7</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="p">(</span><span class="mi">8</span><span class="o">-</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">+=</span><span class="mi">9</span><span class="o">*</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">7</span><span class="p">)),</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="o">%</span><span class="mi">23</span><span class="p">]};</span><span class="k">return</span> <span class="mi">9</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="s2">&quot;A&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;H&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span><span class="o">==</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span><span class="o">==</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">_is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{6}[-]{0,1}[0-9]{4}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">9</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">9</span><span class="o">==</span><span class="nx">f</span><span class="o">?</span><span class="mi">1900</span><span class="o">+</span><span class="nx">e</span><span class="o">:</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="mi">20</span><span class="o">+</span><span class="nx">f</span><span class="p">)</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span><span class="o">*</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="k">return</span> <span class="nx">g</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">g</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="nx">g</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">8</span><span class="p">)},</span><span class="nx">_lt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{11}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">?</span><span class="mi">17</span><span class="o">+</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="mi">17</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">100</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="o">*</span><span class="nx">i</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">!=</span><span class="nx">h</span><span class="p">)</span><span class="k">return</span> <span class="nx">h</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="o">*</span><span class="nx">i</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="k">return</span> <span class="nx">h</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">h</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">10</span><span class="p">)},</span><span class="nx">_lv</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{6}[-]{0,1}[0-9]{5}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\D/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="mi">1800</span><span class="o">+</span><span class="mi">100</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">6</span><span class="p">)),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">9</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">*</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="mi">11</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">f</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">10</span><span class="p">)},</span><span class="nx">_nl</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">9</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{4}[.]{0,1}[0-9]{2}[.]{0,1}[0-9]{3}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\./g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="p">(</span><span class="mi">9</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="k">return</span> <span class="nx">b</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_ro</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{13}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="mi">7</span><span class="o">==</span><span class="nx">c</span><span class="o">||</span><span class="mi">8</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="mi">1</span><span class="o">:</span><span class="mi">1900</span><span class="p">,</span><span class="mi">2</span><span class="o">:</span><span class="mi">1900</span><span class="p">,</span><span class="mi">3</span><span class="o">:</span><span class="mi">1800</span><span class="p">,</span><span class="mi">4</span><span class="o">:</span><span class="mi">1800</span><span class="p">,</span><span class="mi">5</span><span class="o">:</span><span class="mi">2</span><span class="nx">e3</span><span class="p">,</span><span class="mi">6</span><span class="o">:</span><span class="mi">2</span><span class="nx">e3</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&gt;</span><span class="mi">31</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">12</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">9</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">]</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">9</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">k</span><span class="p">))</span><span class="o">*</span><span class="nx">i</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="k">return</span> <span class="nx">h</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">j</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_se</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{10}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="sr">/^[0-9]{6}[-|+][0-9]{4}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">+</span><span class="mi">1900</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">luhn</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_sk</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_cz</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">_sm</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="sr">/^\d{5}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">_za</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[0-9]{10}[0|1][8|9][0-9]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getFullYear</span><span class="p">()</span><span class="o">%</span><span class="mi">100</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">d</span><span class="o">?</span><span class="nx">c</span><span class="o">+</span><span class="mi">1900</span><span class="o">:</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="nx">e3</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">luhn</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">identical</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">field</span><span class="o">:</span><span class="s2">&quot;field&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">field</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">d</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">val</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">updateStatus</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">field</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">STATUS_VALID</span><span class="p">,</span><span class="s2">&quot;identical&quot;</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">imei</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">){</span><span class="k">case</span><span class="sr">/^\d{15}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="k">case</span><span class="sr">/^\d{2}-\d{6}-\d{6}-\d{1}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="k">case</span><span class="sr">/^\d{2}\s\d{6}\s\d{6}\s\d{1}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">luhn</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">case</span><span class="sr">/^\d{14}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="k">case</span><span class="sr">/^\d{16}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="k">case</span><span class="sr">/^\d{2}-\d{6}-\d{6}(|-\d{2})$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="k">case</span><span class="sr">/^\d{2}\s\d{6}\s\d{6}(|\s\d{2})$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">integer</span><span class="o">=</span><span class="p">{</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="sr">/^(?:-?(?:0|[1-9][0-9]*))$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">ip</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">ipv4</span><span class="o">:</span><span class="s2">&quot;ipv4&quot;</span><span class="p">,</span><span class="nx">ipv6</span><span class="o">:</span><span class="s2">&quot;ipv6&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},{</span><span class="nx">ipv4</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">ipv6</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">ipv4</span><span class="o">?</span><span class="sr">/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">ipv6</span><span class="o">?</span><span class="sr">/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">str</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">isbn</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">){</span><span class="k">case</span><span class="sr">/^\d{9}[\dX]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">case</span> <span class="mi">13</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="sr">/^(\d+)-(\d+)-(\d+)-([\dX])$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">case</span> <span class="mi">13</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="sr">/^(\d+)\s(\d+)\s(\d+)\s([\dX])$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;ISBN10&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="sr">/^(978|979)\d{9}[\dX]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">case</span> <span class="mi">17</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="sr">/^(978|979)-(\d+)-(\d+)-(\d+)-([\dX])$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">case</span> <span class="mi">17</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="sr">/^(978|979)\s(\d+)\s(\d+)\s(\d+)\s([\dX])$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;ISBN13&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9X]/gi</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;ISBN10&quot;</span><span class="o">:</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">+=</span><span class="p">(</span><span class="mi">10</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">h</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="mi">11</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">:</span><span class="mi">10</span><span class="o">==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;X&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="k">case</span><span class="s2">&quot;ISBN13&quot;</span><span class="o">:</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">+=</span><span class="nx">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="o">:</span><span class="mi">3</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="mi">10</span><span class="o">-</span><span class="nx">h</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">isin</span><span class="o">=</span><span class="p">{</span><span class="nx">COUNTRY_CODES</span><span class="o">:</span><span class="s2">&quot;AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW&quot;</span><span class="p">,</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">COUNTRY_CODES</span><span class="o">+</span><span class="s2">&quot;)[0-9A-Z]{10}$&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">e</span><span class="o">+=</span><span class="nx">h</span><span class="o">&gt;</span><span class="mi">57</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="mi">55</span><span class="p">).</span><span class="nx">toString</span><span class="p">()</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="o">%</span><span class="mi">2</span><span class="o">!=</span><span class="mi">0</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">i</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">])</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="nx">k</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">l</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">g</span><span class="p">));</span><span class="k">return</span> <span class="nx">l</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="o">-</span><span class="nx">l</span><span class="o">%</span><span class="mi">10</span><span class="p">)</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">l</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">ismn</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">){</span><span class="k">case</span><span class="sr">/^M\d{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">case</span><span class="sr">/^M-\d{4}-\d{4}-\d{1}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">case</span><span class="sr">/^M\s\d{4}\s\d{4}\s\d{1}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;ISMN10&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="sr">/^9790\d{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">case</span><span class="sr">/^979-0-\d{4}-\d{4}-\d{1}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">case</span><span class="sr">/^979\s0\s\d{4}\s\d{4}\s\d{1}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;ISMN13&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="s2">&quot;ISMN10&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;9790&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">)),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9]/gi</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">*</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="o">%</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="mi">10</span><span class="o">-</span><span class="nx">f</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">f</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">issn</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\d{4}\-\d{3}[\dX]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9X]/gi</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="s2">&quot;X&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span><span class="mi">10</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">+=</span><span class="p">(</span><span class="mi">8</span><span class="o">-</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="k">return</span> <span class="nx">f</span><span class="o">%</span><span class="mi">11</span><span class="o">==</span><span class="mi">0</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">lessThan</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="nx">inclusive</span><span class="o">:</span><span class="s2">&quot;inclusive&quot;</span><span class="p">},</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;max&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="p">}</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">inclusive</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">inclusive</span><span class="o">?</span><span class="nx">d</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">mac</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="sr">/^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">notEmpty</span><span class="o">=</span><span class="p">{</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;required&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;required&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;true&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;radio&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;checkbox&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFieldElements</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">)).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;:checked&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">())}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">numeric</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">separator</span><span class="o">:</span><span class="s2">&quot;separator&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">separator</span><span class="o">||</span><span class="s2">&quot;.&quot;</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;.&quot;</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;.&quot;</span><span class="p">)),</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">phone</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">country</span><span class="o">:</span><span class="s2">&quot;country&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">country</span><span class="o">||</span><span class="s2">&quot;US&quot;</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">switch</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;GB&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="sr">/^\(?(?:(?:0(?:0|11)\)?[\s-]?\(?|\+)44\)?[\s-]?\(?(?:0\)?[\s-]?\(?)?|0)(?:\d{2}\)?[\s-]?\d{4}[\s-]?\d{4}|\d{3}\)?[\s-]?\d{3}[\s-]?\d{3,4}|\d{4}\)?[\s-]?(?:\d{5}|\d{3}[\s-]?\d{3})|\d{5}\)?[\s-]?\d{4,5}|8(?:00[\s-]?11[\s-]?11|45[\s-]?46[\s-]?4\d))(?:(?:[\s-]?(?:x|ext\.?\s?|\#)\d+)?)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;US&quot;</span><span class="o">:</span><span class="k">default</span><span class="o">:</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\D/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="sr">/^(?:(1\-?)|(\+1 ?))?\(?(\d{3})[\)\-\.]?(\d{3})[\-\.]?(\d{4})$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">10</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">}}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">regexp</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">regexp</span><span class="o">:</span><span class="s2">&quot;regexp&quot;</span><span class="p">},</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;pattern&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="p">{</span><span class="nx">regexp</span><span class="o">:</span><span class="nx">b</span><span class="p">}</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">regexp</span><span class="o">?</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">regexp</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">regexp</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">remote</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="s2">&quot;url&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;name&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-bv-field&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="kc">null</span><span class="o">==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="p">{}),</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">)),</span><span class="nx">g</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Deferred</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;POST&quot;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;json&quot;</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">g</span><span class="p">});</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;remote&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">valid</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="s2">&quot;true&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">valid</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">message</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">message</span><span class="o">:</span><span class="kc">null</span><span class="p">)}),</span><span class="nx">h</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">.</span><span class="nx">abort</span><span class="p">()}),</span><span class="nx">h</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">rtn</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\d{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">+=</span><span class="mi">3</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="mi">3</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="mi">7</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="k">return</span> <span class="mi">0</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">%</span><span class="mi">10</span><span class="o">==</span><span class="mi">0</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">sedol</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="o">!</span><span class="sr">/^[0-9A-Z]{7}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="mi">36</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="o">-</span><span class="nx">d</span><span class="o">%</span><span class="mi">10</span><span class="p">)</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">d</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">siren</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="sr">/^\d{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">luhn</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">siret</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">g</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">-=</span><span class="mi">9</span><span class="p">)),</span><span class="nx">e</span><span class="o">+=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">%</span><span class="mi">10</span><span class="o">==</span><span class="mi">0</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">step</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">base</span><span class="o">:</span><span class="s2">&quot;baseValue&quot;</span><span class="p">,</span><span class="nx">step</span><span class="o">:</span><span class="s2">&quot;step&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},{</span><span class="nx">baseValue</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">step</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||!</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="o">*=</span><span class="nx">c</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">|-</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">%</span><span class="mi">1</span><span class="o">===</span><span class="p">.</span><span class="mi">5</span><span class="o">*</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">))</span><span class="o">/</span><span class="nx">c</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="nx">c</span><span class="p">},</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">)},</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">baseValue</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">step</span><span class="p">);</span><span class="k">return</span> <span class="mi">0</span><span class="o">==</span><span class="nx">h</span><span class="o">||</span><span class="nx">h</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">step</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">stringCase</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="s2">&quot;case&quot;</span><span class="o">:</span><span class="s2">&quot;case&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="s2">&quot;case&quot;</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;lower&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;upper&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">d</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">case</span><span class="s2">&quot;lower&quot;</span><span class="o">:</span><span class="k">default</span><span class="o">:</span><span class="k">return</span> <span class="nx">d</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()}}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">stringLength</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="s2">&quot;min&quot;</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="s2">&quot;max&quot;</span><span class="p">},</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;maxlength&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="p">{</span><span class="nx">max</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">10</span><span class="p">)}</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">min</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">max</span><span class="o">?!</span><span class="mi">1</span><span class="o">:!</span><span class="mi">0</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">uri</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">allowlocal</span><span class="o">:</span><span class="s2">&quot;allowLocal&quot;</span><span class="p">},</span><span class="nx">enableByHtml5</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;url&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">allowLocal</span><span class="o">||</span><span class="s2">&quot;true&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">allowLocal</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:/[^\\s]*)?$&quot;</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">uuid</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;version&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="mi">3</span><span class="o">:</span><span class="sr">/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i</span><span class="p">,</span><span class="mi">4</span><span class="o">:</span><span class="sr">/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i</span><span class="p">,</span><span class="mi">5</span><span class="o">:</span><span class="sr">/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i</span><span class="p">,</span><span class="nx">all</span><span class="o">:</span><span class="sr">/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">version</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">version</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;all&quot;</span><span class="p">;</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">vat</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">country</span><span class="o">:</span><span class="s2">&quot;country&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">country</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;_&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">](</span><span class="nx">d</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">_at</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^ATU[0-9]{8}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">7</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">d</span><span class="o">/</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="o">%</span><span class="mi">10</span><span class="p">),</span><span class="nx">b</span><span class="o">+=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="mi">10</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">4</span><span class="p">)</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_be</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^BE[0]{0,1}[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="mi">9</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">8</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">%</span><span class="mi">97</span><span class="o">==</span><span class="mi">0</span><span class="p">},</span><span class="nx">_bg</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^BG[0-9]{9,10}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">9</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">3</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">%=</span><span class="mi">10</span><span class="p">,</span><span class="nx">c</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="mi">1900</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">40</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">+=</span><span class="mi">100</span><span class="p">,</span><span class="nx">d</span><span class="o">-=</span><span class="mi">40</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">20</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">-=</span><span class="mi">100</span><span class="p">,</span><span class="nx">d</span><span class="o">-=</span><span class="mi">20</span><span class="p">),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">9</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">*</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">%</span><span class="mi">11</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">f</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">21</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">17</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">9</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">%=</span><span class="mi">10</span><span class="p">,</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">9</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="mi">11</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">))};</span><span class="k">return</span> <span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_ch</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^CHE[0-9]{9}(MWST)?$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="mi">11</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">))},</span><span class="nx">_cy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^CY[0-5|9]{1}[0-9]{7}[A-Z]{1}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="s2">&quot;12&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="mi">5</span><span class="o">:</span><span class="mi">13</span><span class="p">,</span><span class="mi">6</span><span class="o">:</span><span class="mi">15</span><span class="p">,</span><span class="mi">7</span><span class="o">:</span><span class="mi">17</span><span class="p">,</span><span class="mi">8</span><span class="o">:</span><span class="mi">19</span><span class="p">,</span><span class="mi">9</span><span class="o">:</span><span class="mi">21</span><span class="p">},</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="nx">d</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">]),</span><span class="nx">b</span><span class="o">+=</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span class="p">[</span><span class="nx">b</span><span class="o">%</span><span class="mi">26</span><span class="p">],</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_cz</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^CZ[0-9]{8,10}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">8</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="s2">&quot;9&quot;</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">7</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">8</span><span class="o">-</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">c</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="mi">11</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">9</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="s2">&quot;6&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">7</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">8</span><span class="o">-</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">c</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="mi">11</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">8</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">][</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">9</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">1900</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">%</span><span class="mi">50</span><span class="o">%</span><span class="mi">20</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="mi">9</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">1980</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">-=</span><span class="mi">100</span><span class="p">),</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">1953</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="mi">1954</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">+=</span><span class="mi">100</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">9</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">%</span><span class="mi">11</span><span class="p">;</span><span class="k">return</span> <span class="mi">1985</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">%=</span><span class="mi">10</span><span class="p">),</span><span class="nx">h</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_de</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="sr">/^DE[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">mod_11_10</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_dk</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^DK[0-9]{8}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="o">==</span><span class="mi">0</span><span class="p">},</span><span class="nx">_ee</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^EE[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">9</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">%</span><span class="mi">10</span><span class="o">==</span><span class="mi">0</span><span class="p">},</span><span class="nx">_es</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^ES[0-9A-Z][0-9]{7}[0-9A-Z]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">8</span><span class="p">),</span><span class="mi">10</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;TRWAGMYFPDXBNJZSQVHLCKE&quot;</span><span class="p">[</span><span class="nx">b</span><span class="o">%</span><span class="mi">23</span><span class="p">],</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;XYZ&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">)].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;TRWAGMYFPDXBNJZSQVHLCKE&quot;</span><span class="p">[</span><span class="nx">b</span><span class="o">%</span><span class="mi">23</span><span class="p">],</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="s2">&quot;KLM&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">8</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;TRWAGMYFPDXBNJZSQVHLCKE&quot;</span><span class="p">[</span><span class="nx">b</span><span class="o">%</span><span class="mi">23</span><span class="p">],</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">!=</span><span class="s2">&quot;ABCDEFGHJNPQRSUVW&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">7</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span><span class="o">*</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">f</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">f</span><span class="o">/</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="nx">f</span><span class="o">%</span><span class="mi">10</span><span class="p">),</span><span class="nx">d</span><span class="o">+=</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="mi">10</span><span class="o">-</span><span class="nx">d</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">d</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;JABCDEFGHI&quot;</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="sr">/^[0-9]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="sr">/^[XYZ]$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">_fi</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^FI[0-9]{8}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="o">==</span><span class="mi">0</span><span class="p">},</span><span class="nx">_fr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^FR[0-9A-Z]{2}[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">luhn</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">)))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="sr">/^[0-9]{2}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)))</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">==</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;12&quot;</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">%</span><span class="mi">97</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;0123456789ABCDEFGHJKLMNPQRSTUVWXYZ&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/^[0-9]{1}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span><span class="o">?</span><span class="mi">24</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">-</span><span class="mi">10</span><span class="o">:</span><span class="mi">34</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">-</span><span class="mi">100</span><span class="p">,(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">c</span><span class="o">/</span><span class="mi">11</span><span class="p">))</span><span class="o">%</span><span class="mi">11</span><span class="o">==</span><span class="nx">c</span><span class="o">%</span><span class="mi">11</span><span class="p">},</span><span class="nx">_gb</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="sr">/^GB[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="sr">/^GB[0-9]{12}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="sr">/^GBGD[0-9]{3}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="sr">/^GBHA[0-9]{3}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="sr">/^GB(GD|HA)8888[0-9]{5}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">5</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span><span class="k">return</span><span class="s2">&quot;GD&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">500</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;HA&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&gt;=</span><span class="mi">500</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="mi">11</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;GD8888&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;HA8888&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)))</span><span class="k">return</span><span class="s2">&quot;GD&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span><span class="o">&gt;=</span><span class="mi">500</span><span class="o">||</span><span class="s2">&quot;HA&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span><span class="o">&lt;</span><span class="mi">500</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span><span class="o">%</span><span class="mi">97</span><span class="o">==</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="mi">9</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="mi">12</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="mi">8</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">9</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="o">%=</span><span class="mi">97</span><span class="p">,</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span><span class="o">&gt;=</span><span class="mi">100</span><span class="o">?</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="o">||</span><span class="mi">42</span><span class="o">==</span><span class="nx">e</span><span class="o">||</span><span class="mi">55</span><span class="o">==</span><span class="nx">e</span><span class="o">:</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">_gr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^GR[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="mi">8</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">256</span><span class="p">,</span><span class="mi">128</span><span class="p">,</span><span class="mi">64</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_el</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="sr">/^EL[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;GR&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_gr</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_hu</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^HU[0-9]{8}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">%</span><span class="mi">10</span><span class="o">==</span><span class="mi">0</span><span class="p">},</span><span class="nx">_hr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="sr">/^HR[0-9]{11}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">mod_11_10</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_ie</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^IE[0-9]{1}[0-9A-Z\*\+]{1}[0-9]{5}[A-Z]{1,2}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">7</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;WABCDEFGHIJKLMNOPQRSTUV&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">7</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="p">(</span><span class="mi">8</span><span class="o">-</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">+=</span><span class="mi">9</span><span class="o">*</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">7</span><span class="p">)),</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="o">%</span><span class="mi">23</span><span class="p">]};</span><span class="k">return</span><span class="sr">/^[0-9]+$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span><span class="o">==</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:-</span><span class="mi">1</span><span class="o">!=</span><span class="s2">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ+*&quot;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span><span class="o">==</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">_it</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^IT[0-9]{11}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">)))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">));</span><span class="k">return</span> <span class="mi">1</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">||</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">201</span><span class="o">&amp;&amp;</span><span class="mi">999</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">888</span><span class="o">!=</span><span class="nx">c</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">luhn</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">_lt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^LT([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="nx">d</span><span class="o">%</span><span class="mi">9</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="o">%</span><span class="mi">11</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">10</span><span class="o">==</span><span class="nx">e</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">%</span><span class="mi">9</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">%</span><span class="mi">11</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">e</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_lu</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="sr">/^LU[0-9]{8}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">%</span><span class="mi">89</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_lv</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^LV[0-9]{11}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="o">*</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">return</span> <span class="nx">d</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="mi">3</span><span class="o">==</span><span class="nx">d</span><span class="p">}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">i</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">j</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="mi">1800</span><span class="o">+</span><span class="mi">100</span><span class="o">*</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">6</span><span class="p">)),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">9</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="o">*</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="mi">11</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">d</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_mt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^MT[0-9]{8}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">%</span><span class="mi">37</span><span class="o">==</span><span class="mi">0</span><span class="p">},</span><span class="nx">_nl</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^NL[0-9]{9}B[0-9]{2}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_no</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^NO[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="mi">11</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_pl</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^PL[0-9]{10}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="o">==</span><span class="mi">0</span><span class="p">},</span><span class="nx">_pt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^PT[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_ro</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^RO[1-9][0-9]{1,9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="mi">10</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="mi">10</span><span class="o">*</span><span class="nx">d</span><span class="o">%</span><span class="mi">11</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="nx">d</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_ru</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^RU([0-9]{9}|[0-9]{12})$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="mi">10</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">%=</span><span class="mi">10</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="mi">12</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">11</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">g</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">h</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">%=</span><span class="mi">10</span><span class="p">),</span><span class="nx">g</span><span class="o">%=</span><span class="mi">11</span><span class="p">,</span><span class="nx">g</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">%=</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">11</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_rs</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^RS[0-9]{9}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">8</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">%</span><span class="mi">10</span><span class="p">,</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">10</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="o">%</span><span class="mi">11</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span><span class="o">%</span><span class="mi">10</span><span class="o">==</span><span class="mi">1</span><span class="p">},</span><span class="nx">_se</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="sr">/^SE[0-9]{10}01$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">helpers</span><span class="p">.</span><span class="nx">luhn</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_si</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^SI[0-9]{8}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="mi">8</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">7</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="mi">11</span><span class="o">-</span><span class="nx">b</span><span class="o">%</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_sk</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="sr">/^SK[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="nx">a</span><span class="o">%</span><span class="mi">11</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">vin</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^[a-hj-npr-z0-9]{8}[0-9xX][a-hj-npr-z0-9]{8}$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">A</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">B</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">C</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">D</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">E</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">F</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">G</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">H</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">J</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">K</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">L</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">M</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">N</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">P</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">R</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="nx">S</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">T</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">U</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">V</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">W</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">Y</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">Z</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="mi">8</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">+=</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="o">%</span><span class="mi">11</span><span class="p">;</span><span class="k">return</span> <span class="mi">10</span><span class="o">==</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;X&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">8</span><span class="p">)}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">bootstrapValidator</span><span class="p">.</span><span class="nx">validators</span><span class="p">.</span><span class="nx">zipCode</span><span class="o">=</span><span class="p">{</span><span class="nx">html5Attributes</span><span class="o">:</span><span class="p">{</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;message&quot;</span><span class="p">,</span><span class="nx">country</span><span class="o">:</span><span class="s2">&quot;country&quot;</span><span class="p">},</span><span class="nx">validate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">d</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">country</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">country</span><span class="o">||</span><span class="s2">&quot;US&quot;</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;CA&quot;</span><span class="o">:</span><span class="k">return</span><span class="sr">/^(?:A|B|C|E|G|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}(?:A|B|C|E|G|J|K|L|M|N|P|R|S|T|V|X|Y){1}\s?[0-9]{1}(?:A|B|C|E|G|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;DK&quot;</span><span class="o">:</span><span class="k">return</span><span class="sr">/^(DK(-|\s)?)?\d{4}$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;GB&quot;</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_gb</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;IT&quot;</span><span class="o">:</span><span class="k">return</span><span class="sr">/^(I-|IT-)?\d{5}$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;NL&quot;</span><span class="o">:</span><span class="k">return</span><span class="sr">/^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;SE&quot;</span><span class="o">:</span><span class="k">return</span><span class="sr">/^(S-)?\d{3}\s?\d{2}$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;US&quot;</span><span class="o">:</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="sr">/^\d{4,5}([\-]\d{4})?$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)}},</span><span class="nx">_gb</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;[ABCDEFGHIJKLMNOPRSTUWYZ]&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;[ABCDEFGHKLMNOPQRSTUVWXY]&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;[ABCDEFGHJKPMNRSTUVWXY]&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;[ABEHMNPRVWXY]&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;[ABDEFGHJLNPQRSTUWXYZ]&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;{1}&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;?[0-9]{1,2})(\\s*)([0-9]{1}&quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;{2})$&quot;</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">),</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;{1}[0-9]{1}&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;{1})(\\s*)([0-9]{1}&quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;{2})$&quot;</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">),</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;{1}&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;{1}?[0-9]{1}&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;{1})(\\s*)([0-9]{1}&quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;{2})$&quot;</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">),</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(BF1)(\\s*)([0-6]{1}[ABDEFGHJLNPQRST]{1}[ABDEFGHJLNPQRSTUWZYZ]{1})$&quot;</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">),</span><span class="sr">/^(GIR)(\s*)(0AA)$/i</span><span class="p">,</span><span class="sr">/^(BFPO)(\s*)([0-9]{1,4})$/i</span><span class="p">,</span><span class="sr">/^(BFPO)(\s*)(c\/o\s*[0-9]{1,3})$/i</span><span class="p">,</span><span class="sr">/^([A-Z]{4})(\s*)(1ZZ)$/i</span><span class="p">,</span><span class="sr">/^(AI-2640)$/i</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">);</span></div></pre></div></td>
         </tr>
       </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.05295s from github-fe119-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-c044173f1e759e8299dbe414ec8ed23e4405bdc5.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-2d727fd36dd5f14dffd45a95f75e51e50ff0f0db.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

